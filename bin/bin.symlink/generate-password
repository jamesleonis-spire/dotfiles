#!/bin/bash

function gp_display_help ()
{
    echo "usage: generate-password [-chs] [-l password_length]"
    if [ "$1" == 'more' ]; then
        echo "   -c: Put the password into the clipboard."
        echo "   -h: Display this helpfile"
        echo "   -s: Silent. Don't display the generated password."
        echo "   -l: Set the password's length. Default is 30 characters."
    fi
}

function gp_bad_params ()
{
    echo "Invalid parameters" >&2
    gp_display_help >&2
    exit $1
}

arguments=`getopt :chsl: $*`

if test $? != 0; then
    gp_bad_params 1
fi

eval set -- "$arguments"

while true
do
    case "$1" in
        -l)
            length=$2
            shift 2
            ;;
        -c)
            paste_buffer="1"
            shift
            ;;
        -s)
            silent=1
            shift
            ;;
        -h)
            gp_display_help 'more'
            exit 0
            ;;
        --)
            shift
            break
            ;;
        *)
            gp_bad_params 2
            ;;
    esac
done

# if no length was specified, default to 30 characters.
: ${length:="30"}

# Grab some /dev/random and sift it for alphanumeric characters, then
# grab $length amount of characters.
password=`LANG=C < /dev/random tr -cd [:alnum:] | head -c$length`

# Put the password into the copy buffer if wanted
if [ "$paste_buffer" ]; then
    if [ `command -v pbcopy` ]; then
        echo $password | pbcopy
    elif [ `command -v xclip` ]; then
        echo $password | xclip -selection clipboard
    elif [ `command -v xsel` ]; then
        echo $password | xsel --clipboard --input
    else
        echo "WARNING: No clipboard command found. String not copied." >&2
    fi
fi

[ "$silent" ] || echo $password

exit 0
