" ===================
" James' VIM settings
" ===================



" Basics
" ======

" Settings for VIM, not Vi
set nocompatible

" Infect VIM with plugins!
call pathogen#infect()

" Go go gadget SYNTAX HIGHLIGHTING!
syntax on

" Get VIM to detect the type of file in the editor
filetype on

" Get VIM to load filetype specific features and indentation styles
filetype plugin indent on

" My NEW favorite color scheme
colorscheme jellybeans

" The default popup menu colors are HORRENDUS! For the love of all that is
" good in this world, change them to not-horrible!
highlight Pmenu ctermbg=238 guibg=#202020
highlight PmenuSel gui=bold guibg=#303030 guifg=White



" Font
" ====

" I don't know why each OS has it's own font format, but that's how it is.
if has('win32')
    set guifont=DejaVu_Sans_Mono:h10
elseif has('mac')
    set guifont=DejaVu\ Sans\ Mono:h12
elseif has('unix')
    set guifont=DejaVu\ Sans\ Mono\ 10
endif



" Basic editor options
" ====================

" Kill the alarm bells
set visualbell
set noerrorbells

" Show the state of commands being entered
set showcmd

" Allow the mouse in the terminal
set mouse=a

" Show the location of the cursor
set ruler

" Do line wrapping...
set wrap

" ...but do it sensibly, like around whole words
set linebreak

" When line wrapping, wrap through the line number column. This makes it easy
" to know when a particular line is wrapped or not.
set cpoptions+=n

" Don't automatically format text to a limited width
set textwidth=0

" Turn tabs into spaces. I'm not partial, but MANY others are.
set expandtab

" If there are tabs, then they should be 4 spaces wide
set tabstop=2

" Tools will indend to 4 spaces (think >> and <<)
set shiftwidth=2

" If tabs are used in a position that isn't aligned with tabstop, then it will
" insert the correct number of spaces needed to get to the tabstop
set softtabstop=2

" Tools will insert the correct amount of tabs for autoindenting
set shiftround

" Be smart about handling tabs, even when they are handled with spaces
set smarttab

" Nothing is more annoying than doing everything by hand, like indentation
set autoindent

" Put the line numbers on the left hand side.
"    Vim 7.4 supports both options. Yay!
set number
set relativenumber

autocmd InsertEnter * set norelativenumber
autocmd InsertLeave * set relativenumber

" Set the line number column width to 5 so it's not resizing itself when
" switching from relativenumber to number
" Yes, I work with files that are > 10,000 LOC
set numberwidth=6

" Highlight the matching brace, paren, bracket, etc. Helpful when in a nested
" part of the code and you are trying to match these things correctly.
set showmatch

" Highlight search matches. Use 'noh(lsearch)" to temporarily disable
" highlighting. Use 'set nohlsearch' to turn this off for the session.
set hlsearch

" Search incrementally, incredibly!
set incsearch

" VIM should remember what I did for a LOOOOOONG time...
set history=1000

" ...as well as be VERY forgiving
set undolevels=1000

" I don't want to worry about the case when searching or doing something
" else where case can trip me up...
set ignorecase

" ...except in those cases when I really DO want to know the case of what I'm
" searching for.
set smartcase

" Always show the status bar
set laststatus=2

" Turn on the wildmenu and be more productive TODAY! Only $FREE.99!
set wildmenu

" Make wildmenu GLORIOUS! Seriously!
set wildmode=list:longest,full

" I hate it when I scroll and the cursor isn't in the column I left it. I SAID STAY!
set nostartofline

" Try and keep some lines visible around the cursor when scrolling
set scrolloff=3

" Set backspace key to act like it's modern counterpart
set backspace+=start,eol,indent



" YouCompleteMe
" =============

set completeopt-=preview
let g:ycm_extra_conf_globlist = ['~/programming/*','!~/*']



" CtrlP
" =====

let g:ctrlp_custom_ignore = {
  \ 'dir':  '\v[\/]\.(git|hg|svn)$',
  \ 'file': '\v\.(so|dat|DS_Store|swp|o)$'
  \ }



" Netrw
" =====

let g:netrw_list_hide= '\.swp$,\~,\.git,\.DS_Store'



" Diff
" ====

" Set diff mode to always split vertically and show filler lines
set diffopt=filler,vertical



" Clojure
" =======
autocmd FileType clojure let g:paredit_electric_return = 1



" Ruby
" ====



" C++
" ===

" In C++ I want tabs, not spaces
autocmd FileType cpp set noexpandtab
autocmd FileType cpp set tabstop=4
autocmd FileType cpp set shiftwidth=4
autocmd FileType cpp set softtabstop=4



" PHP
" ===
autocmd FileType php set tabstop=4
autocmd FileType php set shiftwidth=4
autocmd FileType php set softtabstop=4



" HTML
" ====

" HTAs are special HTML files used to build Windows GUIs
autocmd BufNewFile,BufRead *.hta set filetype=html



" CSS
" ===



" Javascript
" ==========



" Markdown
" ========

" Turn on spellcheck
autocmd FileType markdown,text set spell



" Custom commands
" ===============

" Change the directory to the current file's location
command Cdph cd %:p:h
